import arcade



WIDTH = 640
HEIGHT = 480
elapsed_time = 0
timing = True
score = 0

current_screen = "menu"
high_score = 0


def update(delta_time):
    global elapsed_time, score
    if timing == True:
        elapsed_time += delta_time
        elapsed_time = round(elapsed_time, 2)
    elif timing == False:
        if score == 0:
            f = open("high_score", "w+")
            f.write(str(elapsed_time))
            f.close()
            f = open("high_score", "r+")
            if f.mode == "r+":
                score = f.read()
                f.close()
        if elapsed_time < float(score):
            f = open("high_score", "w+")
            f.write(str(elapsed_time))
            f.close()
            f = open("high_score", "r+")
            if f.mode == "r+":
                score = f.read()
                f.close()






def on_draw():
    arcade.start_render()
    # Draw in here...
    if current_screen == "menu":
        arcade.draw_text('menu Screen', WIDTH/2, HEIGHT/2, arcade.color.GUPPIE_GREEN)
        arcade.draw_text('H for high score', WIDTH/2 - 20, HEIGHT/2 - 20, arcade.color.GUPPIE_GREEN)
        arcade.draw_text('S for start screen', WIDTH/2 - 40, HEIGHT/2 - 40, arcade.color.GUPPIE_GREEN)
        arcade.draw_rectangle_filled(0, 480, 400, 400, arcade.color.RED)
        arcade.draw_rectangle_filled(640, 480, 400, 400, arcade.color.YELLOW)
        arcade.draw_rectangle_filled(0, 0, 400, 360, arcade.color.GREEN)
        arcade.draw_rectangle_filled(640, 0, 400, 360, arcade.color.WHITE)
        arcade.draw_rectangle_filled(320, 0, 250, 360, arcade.color.ORANGE)
    elif current_screen == "high score":
        arcade.draw_text('High score Screen', WIDTH/2, HEIGHT/2, arcade.color.GUPPIE_GREEN)
        arcade.draw_text(score, WIDTH / 2 - 40, HEIGHT / 2 - 40, arcade.color.GUPPIE_GREEN)
        arcade.draw_text('Escape to go back', WIDTH / 2 - 20, HEIGHT / 2 - 20, arcade.color.GUPPIE_GREEN)
        arcade.draw_rectangle_filled(0, 480, 400, 400, arcade.color.RED)
        arcade.draw_rectangle_filled(640, 480, 400, 400, arcade.color.YELLOW)
        arcade.draw_rectangle_filled(0, 0, 400, 360, arcade.color.GREEN)
        arcade.draw_rectangle_filled(640, 0, 400, 360, arcade.color.WHITE)
        arcade.draw_rectangle_filled(320, 0, 250, 360, arcade.color.ORANGE)
    elif current_screen == "start":
        arcade.draw_text('start Screen', WIDTH / 2, HEIGHT / 2, arcade.color.GUPPIE_GREEN)
        arcade.draw_text('press space to start timer', WIDTH / 2 -40, HEIGHT / 2-40 , arcade.color.GUPPIE_GREEN)
        arcade.draw_text('Escape to go back', WIDTH / 2 - 20, HEIGHT / 2 - 20, arcade.color.GUPPIE_GREEN)
        arcade.draw_rectangle_filled(0, 480, 400, 400, arcade.color.RED)
        arcade.draw_rectangle_filled(640, 480, 400, 400, arcade.color.YELLOW)
        arcade.draw_rectangle_filled(0, 0, 400, 360, arcade.color.GREEN)
        arcade.draw_rectangle_filled(640, 0, 400, 360, arcade.color.WHITE)
        arcade.draw_rectangle_filled(320, 0, 250, 360, arcade.color.ORANGE)
    elif current_screen == "timer":
        arcade.draw_text('solve', WIDTH / 2, HEIGHT / 2, arcade.color.GUPPIE_GREEN)
        arcade.draw_text(str(elapsed_time), WIDTH / 2-40, HEIGHT / 2-40, arcade.color.GUPPIE_GREEN)
        arcade.draw_rectangle_filled(0, 480, 400, 400, arcade.color.RED)
        arcade.draw_rectangle_filled(640, 480, 400, 400, arcade.color.YELLOW)
        arcade.draw_rectangle_filled(0, 0, 400, 360, arcade.color.GREEN)
        arcade.draw_rectangle_filled(640, 0, 400, 360, arcade.color.WHITE)
        arcade.draw_rectangle_filled(320, 0, 250, 360, arcade.color.ORANGE)


def on_key_press(key, modifiers):
    global current_screen, high_score, elapsed_time, timing

    if current_screen == "menu":
        if key == arcade.key.H:
            current_screen = "high score"
            f = open("high_score", "r")
            high_score = f.read()
            f.close()

        elif key == arcade.key.S:
            current_screen = "start"

    elif current_screen == "start":
        if key == arcade.key.ESCAPE:
                current_screen = "menu"
        if key == arcade.key.SPACE:
                current_screen = "timer"
                elapsed_time = 0
                timing = True


    elif current_screen == "high score":
        if key == arcade.key.ESCAPE:
            current_screen = "menu"

    elif current_screen == "timer":
        if key == arcade.key.ESCAPE:
            current_screen = "menu"
        elif key == arcade.key.SPACE:
            timing = False




def on_key_release(key, modifiers):
    pass


def on_mouse_press(x, y, button, modifiers):
    pass


def setup():
    arcade.open_window(WIDTH, HEIGHT, "My Arcade Game")
    arcade.set_background_color(arcade.color.BLUE)
    arcade.schedule(update, 1/60)

    # Override arcade window methods
    window = arcade.get_window()
    window.on_draw = on_draw
    window.on_key_press = on_key_press
    window.on_key_release = on_key_release
    window.on_mouse_press = on_mouse_press

    arcade.run()


def draw_menu():
    pass


def draw_high_score():
    pass

def draw_timer():
    pass




if __name__ == '__main__':
    setup()
